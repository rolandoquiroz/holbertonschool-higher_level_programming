The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    Test: regular addition
    >>> add_integer(1, 2)
    3

    Test: integer casting
    >>> add_integer(1.2, 2.5)
    3

    Test: check type
    >>> add_integer(1, "2")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    Test: Float overflow
    >>> add_integer(float('inf'), 2)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    Test: cannot convert float NaN to integer
    >>> add_integer(float('NaN'), 2)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    Test: missing one argument
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
